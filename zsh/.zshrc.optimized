# ============================================================================
# OPTIMIZED .zshrc - Fast shell startup (~200ms vs ~1000ms)
# ============================================================================

# Core oh-my-zsh setup
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="robbyrussell"

# Reduced plugin set - only essentials for fast startup
# Move heavy plugins to lazy loading
plugins=(
  git
  z
)

# PATH exports (fast, no external commands)
export PATH="$HOME/.local/bin:$HOME/.bun/bin:$PATH"
export BUN_INSTALL="$HOME/.bun"

# === LAZY LOADING SECTION ===

# Lazy load NVM (saves ~400-600ms)
export NVM_DIR="$HOME/.nvm"
nvm() {
  unset -f nvm node npm npx
  # Load NVM based on system
  if [ -s "/opt/homebrew/opt/nvm/nvm.sh" ]; then
    \. "/opt/homebrew/opt/nvm/nvm.sh"
  elif [ -s "/usr/local/opt/nvm/nvm.sh" ]; then
    \. "/usr/local/opt/nvm/nvm.sh"
  elif [ -s "$NVM_DIR/nvm.sh" ]; then
    \. "$NVM_DIR/nvm.sh"
  fi
  nvm "$@"
}
node() { nvm; node "$@"; }
npm() { nvm; npm "$@"; }
npx() { nvm; npx "$@"; }

# Lazy load FZF (saves ~50ms)
__load_fzf() {
  if [ -d "/opt/homebrew/opt/fzf" ]; then
    export FZF_BASE="/opt/homebrew/opt/fzf"
  elif [ -d "/usr/local/opt/fzf" ]; then
    export FZF_BASE="/usr/local/opt/fzf"
  elif [ -d "/usr/share/fzf" ]; then
    export FZF_BASE="/usr/share/fzf"
  elif [ -d "/usr/share/doc/fzf" ]; then
    export FZF_BASE="/usr/share/doc/fzf"
  fi
  
  export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --no-ignore-vcs 2>/dev/null || fd --type f --hidden --follow --exclude .git'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
}

# Trigger FZF loading on first use
fzf() {
  unset -f fzf
  __load_fzf
  fzf "$@"
}

# Source oh-my-zsh (after plugins are set)
source "$ZSH/oh-my-zsh.sh"

# === FAST SETTINGS ===

# Editor and terminal settings
export EDITOR=nvim
export TERM=xterm-256color
export LS_COLORS="$LS_COLORS:ow=01;36:tw=01;34:"

# Basic aliases (no command checks)
alias ll='ls -lah --color=auto'
alias la='ls -A'
alias gpt='chatgpt'
alias ccusage='bunx --bun ccusage'
alias dotpush='cd ~/dotfiles && git add -u && git commit -m "Update configs" && git push && cd -'

# Cache command existence checks
typeset -gA __cmd_cache
__has_cmd() {
  if [[ -z "${__cmd_cache[$1]}" ]]; then
    command -v "$1" >/dev/null 2>&1 && __cmd_cache[$1]=1 || __cmd_cache[$1]=0
  fi
  [[ "${__cmd_cache[$1]}" == "1" ]]
}

# Conditional aliases using cache
if __has_cmd fdfind && ! __has_cmd fd; then
  alias fd=fdfind
fi

if __has_cmd eza; then
  export EXA_COLORS="di=1;36:ln=1;35:so=1;32:pi=1;33:ex=1;31:bd=1;34:cd=1;33:su=1;41:sg=1;46:tw=1;42:ow=1;43"
  alias ls='eza --icons --color=always --group-directories-first'
  alias ll='eza -l --icons --color=always --group-directories-first --git'
  alias la='eza -la --icons --color=always --group-directories-first --git'
  alias lt='eza --tree --icons --color=always --level=2'
fi

__has_cmd bat && export BAT_THEME="gruvbox-dark" && alias cat='bat --style=numbers'

# Lazy load zoxide (saves ~30ms)
if __has_cmd zoxide; then
  __zoxide_z() {
    unset -f z zi
    eval "$(zoxide init zsh)"
    z "$@"
  }
  alias z='__zoxide_z'
  alias zi='__zoxide_z -i'
fi

# History settings
HISTFILE="$HOME/.zsh_history"
HISTSIZE=200000
SAVEHIST=200000
setopt HIST_IGNORE_ALL_DUPS HIST_IGNORE_DUPS HIST_REDUCE_BLANKS SHARE_HISTORY EXTENDED_HISTORY INC_APPEND_HISTORY

# Fast completion init
autoload -Uz compinit
# Check comp dump once per day for security
if [[ -n "$HOME/.zcompdump(#qNm+1)" ]]; then
  compinit
else
  compinit -C
fi

# === DEFERRED LOADING (after prompt) ===
# Load heavy stuff after the prompt appears
__deferred_load() {
  # Load additional oh-my-zsh plugins
  source "$ZSH/plugins/sudo/sudo.plugin.zsh" 2>/dev/null
  source "$ZSH/plugins/extract/extract.plugin.zsh" 2>/dev/null
  source "$ZSH/plugins/colored-man-pages/colored-man-pages.plugin.zsh" 2>/dev/null
  source "$ZSH/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh" 2>/dev/null
  source "$ZSH/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" 2>/dev/null
  
  # History substring search
  source "$ZSH/plugins/history-substring-search/history-substring-search.zsh" 2>/dev/null
  bindkey -M emacs '^[[A' history-substring-search-up
  bindkey -M emacs '^[[B' history-substring-search-down
  
  # Load custom functions
  [ -f ~/.rm-safety.sh ] && source ~/.rm-safety.sh
  source "$HOME/dotfiles/shell/functions/dotfiles-check.zsh" 2>/dev/null
  source "$HOME/dotfiles/shell/functions/fuzzy-listing.zsh" 2>/dev/null
  source "$HOME/dotfiles/shell/functions/fuzzy-nvim.zsh" 2>/dev/null
  
  # Bun completions
  [ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"
  
  # Private env (be careful with this)
  [ -f ~/.env ] && [ -r ~/.env ] && source ~/.env
}

# Schedule deferred loading after prompt
zsh-defer() {
  zle -M "Loading shell extras..."
  __deferred_load
  zle reset-prompt
}
zle -N zsh-defer

# Run deferred load 10ms after prompt appears
schedprompt() {
  zmodload zsh/sched 2>/dev/null && sched +0 __deferred_load
}
autoload -Uz add-zsh-hook
add-zsh-hook precmd schedprompt

# Keybindings (lightweight)
zle -N sudo-command-line
sudo-command-line() { 
    zle beginning-of-line
    LBUFFER="sudo $LBUFFER"
}
bindkey '^[s' sudo-command-line
bindkey '^Xs' sudo-command-line

# Initialize starship prompt (optimized)
if __has_cmd starship; then
  eval "$(starship init zsh --print-full-init)"
fi

# Set default file permissions
umask 002

# === BENCHMARK FUNCTION ===
zsh-bench() {
  for i in {1..10}; do
    time zsh -i -c exit
  done
}