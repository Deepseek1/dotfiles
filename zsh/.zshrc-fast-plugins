#!/usr/bin/env zsh
# Optimized plugin loading strategy

# ESSENTIAL PLUGINS (load immediately - these are fast)
plugins=(
  git                      # Essential for git info in prompt
  z                        # Lightweight directory jumper
)

# DEFERRED PLUGINS (load after prompt appears)
# Put this function at the end of your .zshrc
load_heavy_plugins() {
  # Load the heavy but useful plugins
  source "$ZSH/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh" 2>/dev/null || \
    source "$ZSH/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh" 2>/dev/null
  
  source "$ZSH/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" 2>/dev/null || \
    source "$ZSH/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" 2>/dev/null
  
  # Load other useful but non-critical plugins
  source "$ZSH/plugins/sudo/sudo.plugin.zsh" 2>/dev/null
  source "$ZSH/plugins/extract/extract.plugin.zsh" 2>/dev/null
  source "$ZSH/plugins/colored-man-pages/colored-man-pages.plugin.zsh" 2>/dev/null
  source "$ZSH/plugins/history-substring-search/history-substring-search.zsh" 2>/dev/null
  
  # Set up key bindings for history search
  bindkey '^[[A' history-substring-search-up
  bindkey '^[[B' history-substring-search-down
}

# Schedule loading 10ms after shell starts
# This lets the prompt appear instantly, then loads plugins in background
() {
  # Use zsh's scheduling if available
  if (( $+commands[zsh/sched] )); then
    zmodload zsh/sched 2>/dev/null
    sched +0.01 load_heavy_plugins
  else
    # Fallback: load after first prompt
    precmd_functions+=(load_heavy_plugins)
    # Remove itself after first run
    load_once() {
      load_heavy_plugins
      precmd_functions=(${precmd_functions:#load_once})
    }
    precmd_functions+=(load_once)
  fi
}